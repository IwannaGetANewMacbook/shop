{"version":3,"file":"static/js/336.6a0af753.chunk.js","mappings":"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","sources":["routes/Detail.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport img_prepared from \"../img/img_prepared.jpg\";\r\nimport { tab } from \"@testing-library/user-event/dist/tab\";\r\nimport { Context1 } from \"../App\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItem } from \"../store/cartData\";\r\n\r\nfunction Detail(probs) {\r\n  // Redux store 가져와주는 Hook.\r\n  // Redux store 에 있던 모든 state가 남음.\r\n  let user = useSelector((state) => state.user);\r\n  // useDipatch 는 store.js로 요청 보내주는 함수임\r\n  let dispatch = useDispatch();\r\n\r\n  // useContexct() ---> Context 보관함을 해체해주는 함수.\r\n  let context1 = useContext(Context1);\r\n\r\n  let [fade2, setFade2] = useState(\"\");\r\n\r\n  // 여기적은 코드는 컴포넌트 로드 & 업데이트 마다 실행됨\r\n  // update 된다는 말은 페이지가 재랜더링 될 때를 의미.\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      setAlert(\"none\");\r\n    }, 2000);\r\n\r\n    return () => {\r\n      // useEffect 동작 전에 실행시키고 싶은 함수 넣으면 됨.\r\n      // 별명: clean up function. why? 기존코드 치우는거 여기에 많이 작성해서.\r\n      clearTimeout(timer); // setTimeout 함수 제거해줌.\r\n    };\r\n  }, []);\r\n  // 컴포넌트 mount시 1회만 실행하고 싶으면 useEffect 2번째 파라미터에 빈 리스트 넣으면 됨.\r\n\r\n  // fade2 관련 useEffect\r\n  useEffect(() => {\r\n    let fade2Timer = setTimeout(() => {\r\n      setFade2(\"end\");\r\n    }, 100);\r\n\r\n    return () => {\r\n      setFade2(\"\");\r\n      clearTimeout(fade2Timer);\r\n    };\r\n  }, []);\r\n\r\n  // useParams() 쓰면 현재 url에 파라미터 정보가 남음!!!\r\n  let { id } = useParams();\r\n\r\n  let [alert, setAlert] = useState(\"block\");\r\n\r\n  let [tab, setTab] = useState(0);\r\n\r\n  let found = probs.shoes.find((v, i, a) => {\r\n    return v.id == id;\r\n  });\r\n\r\n  // Local Storage 관련 useEffect\r\n  useEffect(() => {\r\n    let watchedItem = localStorage.getItem(\"watchedItem\");\r\n    watchedItem = JSON.parse(watchedItem);\r\n    watchedItem.push(found.id);\r\n    // set 자료형으로 배열의 중복만 제거함.\r\n    watchedItem = new Set(watchedItem);\r\n    // 중복 제거된 set 자료형을 다시 array로 변환\r\n    watchedItem = Array.from(watchedItem);\r\n    // localStorage에 다시 저장.\r\n    localStorage.setItem(\"watchedItem\", JSON.stringify(watchedItem));\r\n  }, []);\r\n\r\n  if (!found) {\r\n    return <div>페이지 없음</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={`container start ${fade2}`}>\r\n      <div className=\"alert alert-warning\" style={{ display: alert }}>\r\n        2초 이내 구매시 할인\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={found.img ? found.img : img_prepared} width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4 className=\"pt-5\">{found.title}</h4>\r\n          <p>{found.content}</p>\r\n          <p>{found.price}</p>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            style={{ marginBottom: \"20px\" }}\r\n            onClick={() => {\r\n              dispatch(addItem(found));\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Nav\r\n        variant=\"tabs\"\r\n        defaultActiveKey=\"link-0\"\r\n        style={{ justifyContent: \"center\" }}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              setTab(0);\r\n            }}\r\n          >\r\n            Option 0\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              setTab(1);\r\n            }}\r\n          >\r\n            Option 1\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-2\"\r\n            onClick={() => {\r\n              setTab(2);\r\n            }}\r\n          >\r\n            Option 2\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <TabContent tab={tab} setTab={setTab}></TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabContent(probs) {\r\n  let context1 = useContext(Context1);\r\n  let [fade, setFade] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let a = setTimeout(() => {\r\n      setFade(\"end\");\r\n    }, 100);\r\n\r\n    // clean up function -> useEffect 실행됨\r\n    return () => {\r\n      setFade(\"\");\r\n      clearTimeout(a);\r\n    };\r\n  }, [probs.tab]);\r\n\r\n  if (probs.tab == 0) {\r\n    return <div className={`start ${fade}`}> 재고 : {context1.stock[0]} </div>;\r\n  } else if (probs.tab == 1) {\r\n    return <div className={`start ${fade}`}>내용1</div>;\r\n  } else if (probs.tab == 2) {\r\n    return <div className={`start ${fade}`}>내용2</div>;\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n"],"names":["TabContent","probs","context1","useContext","Context1","fade","setFade","useState","useEffect","a","setTimeout","clearTimeout","tab","_jsxs","className","concat","children","stock","_jsx","useSelector","state","user","dispatch","useDispatch","fade2","setFade2","timer","setAlert","fade2Timer","id","useParams","alert","setTab","found","shoes","find","v","i","watchedItem","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","style","display","src","img","img_prepared","width","title","content","price","marginBottom","onClick","addItem","Nav","variant","defaultActiveKey","justifyContent","Item","Link","eventKey"],"sourceRoot":""}